// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: game_difficulty_settings.sql

package db

import (
	"context"
)

const listGameDiffSets = `-- name: ListGameDiffSets :many
SELECT diff_lv, award_density, enemy_density, reviser_id, revise_time, creator_id, create_time FROM game_difficulty_settings
ORDER BY diff_lv
LIMIT $2::int
OFFSET (($1::int - 1) * $2::int)
`

type ListGameDiffSetsParams struct {
	Page     int32 `json:"page"`
	Pagesize int32 `json:"pagesize"`
}

func (q *Queries) ListGameDiffSets(ctx context.Context, arg ListGameDiffSetsParams) ([]GameDifficultySetting, error) {
	rows, err := q.query(ctx, q.listGameDiffSetsStmt, listGameDiffSets, arg.Page, arg.Pagesize)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []GameDifficultySetting{}
	for rows.Next() {
		var i GameDifficultySetting
		if err := rows.Scan(
			&i.DiffLv,
			&i.AwardDensity,
			&i.EnemyDensity,
			&i.ReviserID,
			&i.ReviseTime,
			&i.CreatorID,
			&i.CreateTime,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
